// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditableField Tests Compares EditableField to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditableField
    defaultValue="defaultvalue"
    inputClasses="inputClasses"
    inputType="input"
    labelContent="label"
    leftIcon="lefticon"
    path="path"
    placeHolder="placeholder"
    targetName="target"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="field-label is-normal"
        >
          <label
            className="label"
          >
            <Translate
              id="label"
            />
          </label>
        </div>,
        <div
          className="field-body"
        >
          <div
            className="field"
          >
            <p
              className="control is-expanded has-icons-left has-icons-right"
            >
              <Translate>
                [Function]
              </Translate>
              <span
                className="icon is-small is-left"
              >
                <i
                  className="fas fa-lefticon"
                />
              </span>
            </p>
          </div>
        </div>,
      ],
      "className": "editablefield field is-horizontal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <label
            className="label"
          >
            <Translate
              id="label"
            />
          </label>,
          "className": "field-label is-normal",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Translate
              id="label"
            />,
            "className": "label",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "label",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "label",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="field"
          >
            <p
              className="control is-expanded has-icons-left has-icons-right"
            >
              <Translate>
                [Function]
              </Translate>
              <span
                className="icon is-small is-left"
              >
                <i
                  className="fas fa-lefticon"
                />
              </span>
            </p>
          </div>,
          "className": "field-body",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="control is-expanded has-icons-left has-icons-right"
            >
              <Translate>
                [Function]
              </Translate>
              <span
                className="icon is-small is-left"
              >
                <i
                  className="fas fa-lefticon"
                />
              </span>
            </p>,
            "className": "field",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Translate>
                  [Function]
                </Translate>,
                <span
                  className="icon is-small is-left"
                >
                  <i
                    className="fas fa-lefticon"
                  />
                </span>,
                false,
                false,
              ],
              "className": "control is-expanded has-icons-left has-icons-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": [Function],
                },
                "ref": null,
                "rendered": [Function],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fas fa-lefticon"
                  />,
                  "className": "icon is-small is-left",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-lefticon",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              false,
              false,
            ],
            "type": "p",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
            >
              <Translate
                id="label"
              />
            </label>
          </div>,
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <p
                className="control is-expanded has-icons-left has-icons-right"
              >
                <Translate>
                  [Function]
                </Translate>
                <span
                  className="icon is-small is-left"
                >
                  <i
                    className="fas fa-lefticon"
                  />
                </span>
              </p>
            </div>
          </div>,
        ],
        "className": "editablefield field is-horizontal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <label
              className="label"
            >
              <Translate
                id="label"
              />
            </label>,
            "className": "field-label is-normal",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Translate
                id="label"
              />,
              "className": "label",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "label",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "label",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="field"
            >
              <p
                className="control is-expanded has-icons-left has-icons-right"
              >
                <Translate>
                  [Function]
                </Translate>
                <span
                  className="icon is-small is-left"
                >
                  <i
                    className="fas fa-lefticon"
                  />
                </span>
              </p>
            </div>,
            "className": "field-body",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p
                className="control is-expanded has-icons-left has-icons-right"
              >
                <Translate>
                  [Function]
                </Translate>
                <span
                  className="icon is-small is-left"
                >
                  <i
                    className="fas fa-lefticon"
                  />
                </span>
              </p>,
              "className": "field",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Translate>
                    [Function]
                  </Translate>,
                  <span
                    className="icon is-small is-left"
                  >
                    <i
                      className="fas fa-lefticon"
                    />
                  </span>,
                  false,
                  false,
                ],
                "className": "control is-expanded has-icons-left has-icons-right",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "rendered": [Function],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fas fa-lefticon"
                    />,
                    "className": "icon is-small is-left",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fas fa-lefticon",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                false,
                false,
              ],
              "type": "p",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
