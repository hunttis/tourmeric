// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditableVerticalField Tests Compares EditableVerticalField to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditableVerticalField
    defaultValue="defaultvalue"
    inputClasses="inputClasses"
    inputType="input"
    labelContent="label"
    leftIcon="lefticon"
    path="path"
    placeHolder="placeholder"
    targetName="target"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          className="label"
        >
          <Translate
            id="label"
          />
        </label>,
        <div
          className="field"
        >
          <p
            className="control is-expanded has-icons-right"
          >
            <Translate>
              [Function]
            </Translate>
          </p>
        </div>,
      ],
      "className": "field",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Translate
            id="label"
          />,
          "className": "label",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "label",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="control is-expanded has-icons-right"
          >
            <Translate>
              [Function]
            </Translate>
          </p>,
          "className": "field",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Translate>
                [Function]
              </Translate>,
              undefined,
              false,
              false,
            ],
            "className": "control is-expanded has-icons-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": [Function],
              },
              "ref": null,
              "rendered": [Function],
              "type": [Function],
            },
            undefined,
            false,
            false,
          ],
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            className="label"
          >
            <Translate
              id="label"
            />
          </label>,
          <div
            className="field"
          >
            <p
              className="control is-expanded has-icons-right"
            >
              <Translate>
                [Function]
              </Translate>
            </p>
          </div>,
        ],
        "className": "field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Translate
              id="label"
            />,
            "className": "label",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "label",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="control is-expanded has-icons-right"
            >
              <Translate>
                [Function]
              </Translate>
            </p>,
            "className": "field",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Translate>
                  [Function]
                </Translate>,
                undefined,
                false,
                false,
              ],
              "className": "control is-expanded has-icons-right",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": [Function],
                },
                "ref": null,
                "rendered": [Function],
                "type": [Function],
              },
              undefined,
              false,
              false,
            ],
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
