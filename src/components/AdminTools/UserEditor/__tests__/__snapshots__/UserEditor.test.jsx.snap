// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserEditor Tests Compares UserEditor to snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserEditor
    users={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="modal "
        >
          <div
            className="modal-background"
          />
          <div
            className="modal-content"
          />
          <button
            aria-label="close"
            className="modal-close is-large"
            onClick={[Function]}
          />
        </div>,
        <div
          className="level"
        >
          <div
            className="level-left"
          >
            <div
              className="level-item"
            >
              <input
                className="input"
                onChange={[Function]}
                placeholder="Search users"
                type="text"
              />
            </div>
            <div
              className="level-item"
            >
              0 users in total
            </div>
          </div>
          <div
            className="level-right"
          />
        </div>,
        <div
          className="columns is-multiline"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="modal-background"
            />,
            <div
              className="modal-content"
            />,
            <button
              aria-label="close"
              className="modal-close is-large"
              onClick={[Function]}
            />,
          ],
          "className": "modal ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "modal-background",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                false,
              ],
              "className": "modal-content",
            },
            "ref": null,
            "rendered": Array [
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "close",
              "className": "modal-close is-large",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="level-left"
            >
              <div
                className="level-item"
              >
                <input
                  className="input"
                  onChange={[Function]}
                  placeholder="Search users"
                  type="text"
                />
              </div>
              <div
                className="level-item"
              >
                0 users in total
              </div>
            </div>,
            <div
              className="level-right"
            />,
          ],
          "className": "level",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="level-item"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Search users"
                    type="text"
                  />
                </div>,
                <div
                  className="level-item"
                >
                  0 users in total
                </div>,
              ],
              "className": "level-left",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Search users"
                    type="text"
                  />,
                  "className": "level-item",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input",
                    "onChange": [Function],
                    "placeholder": "Search users",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    false,
                    "0 users in total",
                  ],
                  "className": "level-item",
                },
                "ref": null,
                "rendered": Array [
                  false,
                  "0 users in total",
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "level-right",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "columns is-multiline",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="modal "
          >
            <div
              className="modal-background"
            />
            <div
              className="modal-content"
            />
            <button
              aria-label="close"
              className="modal-close is-large"
              onClick={[Function]}
            />
          </div>,
          <div
            className="level"
          >
            <div
              className="level-left"
            >
              <div
                className="level-item"
              >
                <input
                  className="input"
                  onChange={[Function]}
                  placeholder="Search users"
                  type="text"
                />
              </div>
              <div
                className="level-item"
              >
                0 users in total
              </div>
            </div>
            <div
              className="level-right"
            />
          </div>,
          <div
            className="columns is-multiline"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="modal-background"
              />,
              <div
                className="modal-content"
              />,
              <button
                aria-label="close"
                className="modal-close is-large"
                onClick={[Function]}
              />,
            ],
            "className": "modal ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "modal-background",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  false,
                ],
                "className": "modal-content",
              },
              "ref": null,
              "rendered": Array [
                false,
                false,
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "close",
                "className": "modal-close is-large",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="level-left"
              >
                <div
                  className="level-item"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Search users"
                    type="text"
                  />
                </div>
                <div
                  className="level-item"
                >
                  0 users in total
                </div>
              </div>,
              <div
                className="level-right"
              />,
            ],
            "className": "level",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="level-item"
                  >
                    <input
                      className="input"
                      onChange={[Function]}
                      placeholder="Search users"
                      type="text"
                    />
                  </div>,
                  <div
                    className="level-item"
                  >
                    0 users in total
                  </div>,
                ],
                "className": "level-left",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <input
                      className="input"
                      onChange={[Function]}
                      placeholder="Search users"
                      type="text"
                    />,
                    "className": "level-item",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "input",
                      "onChange": [Function],
                      "placeholder": "Search users",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      false,
                      "0 users in total",
                    ],
                    "className": "level-item",
                  },
                  "ref": null,
                  "rendered": Array [
                    false,
                    "0 users in total",
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "level-right",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "columns is-multiline",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
