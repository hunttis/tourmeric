// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventList tests Compares EventList to snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventList
    categories={
      Object {
        "-LAMd_vpWt-iiSv4f-ID": Object {
          "abbreviation": "MtG",
          "logo": "152722965771313789",
          "name": "Magic: The Gathering",
          "type": "TCG",
        },
        "-LAMddmRE2WVqr1U9guz": Object {
          "abbreviation": "WH40K",
          "logo": "1527227370219137123",
          "name": "Warhammer 40,000",
          "type": "Miniatures",
        },
        "-LAlvCmIWNzYKpa7-7HI": Object {
          "abbreviation": "Lautapelit",
          "logo": "152719272536668394",
          "name": "Lautapelit / Board games",
        },
        "-LCmESny8m9JVEFQ_qOt": Object {
          "abbreviation": "PKM",
          "logo": "152722747904159438",
          "name": "Pokémon",
          "type": "TCG",
        },
        "-LDImTAGxkzrorL0tQdi": Object {
          "abbreviation": "VG",
          "logo": "152719372155055672",
          "name": "Videogames",
        },
        "-LDIw-1LFgiM0EJZGfus": Object {
          "abbreviation": "Necromunda",
          "logo": "15271953483568546",
          "name": "Necromunda",
          "type": "Miniatures",
        },
      }
    }
    events={
      Array [
        Object {
          "key": "-LCyRVRydihk6goyNw8X",
          "value": Object {
            "category": "-LAMd_vpWt-iiSv4f-ID",
            "createDate": "2018-05-20T16:46:32.009Z",
            "date": "2018-05-20",
            "entryFee": "6",
            "format": "Standard",
            "name": "Tapahtuma",
            "notes": "FIJoijgasdsdgasdggagads",
            "playerSlots": "14",
            "prizes": "Foooooooooooooooo",
            "rulesLevel": "Competitive",
            "time": "10:00",
          },
        },
        Object {
          "key": "-LCyHsYigJZGBhD06IId",
          "value": Object {
            "category": "-LAMd_vpWt-iiSv4f-ID",
            "createDate": "2018-05-20T16:04:29.595Z",
            "date": "2018-05-21",
            "entryFee": "5",
            "format": "Modern",
            "link": "https://magic.wizards.com/en/game-info/gameplay/formats/modern",
            "name": "Monday Modern",
            "notes": "Bring a friend!",
            "playerSlots": "31",
            "prizes": "Three (3) OMG credits per player into the prizepool.",
            "published": true,
            "rulesLevel": "Regular",
            "time": "19:00",
          },
        },
        Object {
          "key": "-LDIwRJt9XsXRt0qiBhb",
          "value": Object {
            "category": "-LDIw-1LFgiM0EJZGfus",
            "createDate": "2018-05-24T20:58:06.938Z",
            "date": "2018-05-24",
            "entryFee": "5",
            "format": "League",
            "link": "jokulinkki.fi",
            "name": "Necromunda League",
            "notes": "Shame! Shame! Shame! *DING DING DING*",
            "playerSlots": "12",
            "prizes": "I am Loot.",
            "published": true,
            "rulesLevel": "Casual",
            "time": "17:00",
          },
        },
        Object {
          "key": "-LDI5NRaGsGjm5GNGeTW",
          "value": Object {
            "category": "-LAlvCmIWNzYKpa7-7HI",
            "createDate": "2018-05-24T17:01:53.909Z",
            "date": "2018-05-26",
            "entryFee": "0",
            "format": "Board game",
            "link": "https://geekandsundry.com/international-tabletop-day-april-28-2018/",
            "name": "Lautapeli Lauantai",
            "notes": "Bring a friend and get a surprise gift!",
            "playerSlots": "30",
            "prizes": "A Supi's surprise prize for all participants!",
            "published": true,
            "rulesLevel": "Casual",
            "time": "00:00",
          },
        },
        Object {
          "key": "-LDIt6Dqcl5lCnVF4YI7",
          "value": Object {
            "category": "-LDImTAGxkzrorL0tQdi",
            "createDate": "2018-05-24T20:43:34.143Z",
            "date": "2018-05-26",
            "entryFee": "5",
            "format": "Casual",
            "link": "http://www.metacritic.com/browse/games/score/metascore/all/all/filtered",
            "name": "Video Game",
            "notes": "Nönnönnöö",
            "playerSlots": "20",
            "prizes": "Glory!",
            "published": true,
            "rulesLevel": "Casual",
            "time": "00:00",
          },
        },
        Object {
          "key": "-LDpI3p7_305bkve0s20",
          "value": Object {
            "createDate": "2018-05-31T08:24:26.759Z",
            "date": "2018-05-31",
          },
        },
        Object {
          "key": "-LDI56zLiXQtEMWZsV1K",
          "value": Object {
            "category": "-LAMddmRE2WVqr1U9guz",
            "createDate": "2018-05-24T17:00:46.500Z",
            "date": "2018-09-24",
            "entryFee": "10",
            "format": "Miniatures",
            "link": "http://www.google.fi",
            "name": "Warhammer thing",
            "notes": "Bring your war face!",
            "playerSlots": "10",
            "prizes": "Glory!",
            "published": true,
            "rulesLevel": "Casual",
            "time": "Kill everything",
          },
        },
        Object {
          "key": "-LCyHtHaY7D13k5FzqNt",
          "value": Object {
            "category": "-LAMd_vpWt-iiSv4f-ID",
            "createDate": "2018-05-20T16:04:32.601Z",
            "date": "2018-12-15",
            "entryFee": "10",
            "format": "Standard",
            "link": "https://mtgsuomi.fi/decklist.pdf",
            "name": "PTPQ Near Future Testing",
            "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
            "playerSlots": "65",
            "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
            "published": true,
            "rulesLevel": "Competitive",
            "time": "10:00",
          },
        },
        Object {
          "key": "-LDGfDMHuH2Iu1zQkg8I",
          "value": Object {
            "category": "-LCmESny8m9JVEFQ_qOt",
            "createDate": "2018-05-24T10:23:37.507Z",
            "date": "2018-12-24",
            "entryFee": "10",
            "format": "Pokematch",
            "link": "http://www.pokemon.com",
            "name": "Pokemon duel",
            "notes": "Poison pokemon suck",
            "playerSlots": "10",
            "prizes": "No poison pokemon",
            "published": true,
            "rulesLevel": "Trainer",
            "time": "10:00",
          },
        },
      ]
    }
    participations={
      Object {
        "-LDI56zLiXQtEMWZsV1K": Object {
          "mockUserId": Object {
            "comment": "Jee",
            "date": "2018-06-23T09:40:26.992Z",
            "firstName": "Test",
            "lastName": "Person",
            "userId": "mockUserId",
          },
        },
      }
    }
    profile={
      Object {
        "avatarUrl": "https://foo.com/picture",
        "dciNumber": "123512351112",
        "displayName": "Test Person",
        "email": "fake@fake.com",
        "firstName": "Test",
        "isEmpty": false,
        "isLoaded": true,
        "lastName": "Person",
        "providerData": Array [
          Object {
            "displayName": "Test Person",
            "email": "fake@fake.com",
            "photoURL": "https://foo.com/picture",
            "providerId": "facebook.com",
            "uid": "1234567890",
          },
        ],
        "role": "admin",
      }
    }
    settings={
      Object {
        "activeLogo": "http://foo.com/image.png",
        "dateFormat": "DD.MM.YYYY",
        "pageSubtitle": "",
        "pageTitle": "",
        "subtitleTextColor": "#000",
        "theme": "darkly",
        "titleBarAngle": "150",
        "titleBarColor": "#000",
        "titleBarColor2": "#ec1c22",
        "titleBarPercentage": "50",
        "titleTextColor": "",
      }
    }
    uploadedCategoryLogos={
      Object {
        "152715467988520466": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "1527176436609335002": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "15271767113156952": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152719272536668394": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152719285517486364": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152719293031022177": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152719372155055672": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "1527195222417120304": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "15271953483568546": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "1527227370219137123": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152722741975567107": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152722747904159438": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152722965771313789": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152722968412212601": Object {
          "downloadURL": "http://foo.com/image.png",
        },
        "152722996249973342": Object {
          "downloadURL": "http://foo.com/image.png",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <EventModal
          closeModal={[Function]}
          eventContent={
            Object {
              "category": "-LAMddmRE2WVqr1U9guz",
              "createDate": "2018-05-24T17:00:46.500Z",
              "date": "2018-09-24",
              "entryFee": "10",
              "format": "Miniatures",
              "link": "http://www.google.fi",
              "name": "Warhammer thing",
              "notes": "Bring your war face!",
              "playerSlots": "10",
              "prizes": "Glory!",
              "published": true,
              "rulesLevel": "Casual",
              "time": "Kill everything",
            }
          }
          eventId="-LDI56zLiXQtEMWZsV1K"
          participations={
            Array [
              Object {
                "comment": "Jee",
                "date": "2018-06-23T09:40:26.992Z",
                "firstName": "Test",
                "lastName": "Person",
                "userId": "mockUserId",
              },
            ]
          }
        />
        <EventModal
          closeModal={[Function]}
          eventContent={
            Object {
              "category": "-LAMd_vpWt-iiSv4f-ID",
              "createDate": "2018-05-20T16:04:32.601Z",
              "date": "2018-12-15",
              "entryFee": "10",
              "format": "Standard",
              "link": "https://mtgsuomi.fi/decklist.pdf",
              "name": "PTPQ Near Future Testing",
              "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
              "playerSlots": "65",
              "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
              "published": true,
              "rulesLevel": "Competitive",
              "time": "10:00",
            }
          }
          eventId="-LCyHtHaY7D13k5FzqNt"
          participations={Array []}
        />
        <EventModal
          closeModal={[Function]}
          eventContent={
            Object {
              "category": "-LCmESny8m9JVEFQ_qOt",
              "createDate": "2018-05-24T10:23:37.507Z",
              "date": "2018-12-24",
              "entryFee": "10",
              "format": "Pokematch",
              "link": "http://www.pokemon.com",
              "name": "Pokemon duel",
              "notes": "Poison pokemon suck",
              "playerSlots": "10",
              "prizes": "No poison pokemon",
              "published": true,
              "rulesLevel": "Trainer",
              "time": "10:00",
            }
          }
          eventId="-LDGfDMHuH2Iu1zQkg8I"
          participations={Array []}
        />
        <h1
          className="title"
        >
          <Translate
            id="nextevents"
          />
        </h1>
        <div
          className="columns is-multiline"
        >
          <div
            className="column is-2"
          />
          <div
            className="column is-8"
          >
            <Translate>
              [Function]
            </Translate>
          </div>
          <div
            className="column is-2 is-hidden-mobile"
          />
          <div
            className="column is-2 is-hidden-mobile"
          />
          <div
            className="column is-8 columns is-multiline is-mobile"
          >
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
            <div
              className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
            >
              <button
                className="button is-rounded image-square  "
                onClick={[Function]}
              >
                <img
                  alt=""
                  className="image is-48x48"
                  src="http://foo.com/image.png"
                />
              </button>
            </div>
          </div>
          <div
            className="column is-2"
          />
        </div>
        <div
          className="columns is-multiline"
        >
          <div
            className="column is-2"
          />
          <div
            className="column is-2 is-12-mobile"
          >
            <button
              className="button is-rounded is-fullwidth  high-button"
              data-tooltip="showpastevents"
              onClick={[Function]}
            >
              <Translate
                id="showpastevents"
              />
            </button>
          </div>
        </div>
        <div
          className="columns is-multiline"
        >
          <div
            className="column is-12 columns"
          >
            <div
              className="column is-2"
            />
            <Connect(Connect(EventCard))
              eventId="-LDI56zLiXQtEMWZsV1K"
              openModal={[Function]}
            />
            <div
              className="column is-2"
            />
          </div>
          <div
            className="column is-12 columns"
          >
            <div
              className="column is-2"
            />
            <Connect(Connect(EventCard))
              eventId="-LCyHtHaY7D13k5FzqNt"
              openModal={[Function]}
            />
            <div
              className="column is-2"
            />
          </div>
          <div
            className="column is-12 columns"
          >
            <div
              className="column is-2"
            />
            <Connect(Connect(EventCard))
              eventId="-LDGfDMHuH2Iu1zQkg8I"
              openModal={[Function]}
            />
            <div
              className="column is-2"
            />
          </div>
        </div>
      </div>,
      "className": "section",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <EventModal
              closeModal={[Function]}
              eventContent={
                Object {
                  "category": "-LAMddmRE2WVqr1U9guz",
                  "createDate": "2018-05-24T17:00:46.500Z",
                  "date": "2018-09-24",
                  "entryFee": "10",
                  "format": "Miniatures",
                  "link": "http://www.google.fi",
                  "name": "Warhammer thing",
                  "notes": "Bring your war face!",
                  "playerSlots": "10",
                  "prizes": "Glory!",
                  "published": true,
                  "rulesLevel": "Casual",
                  "time": "Kill everything",
                }
              }
              eventId="-LDI56zLiXQtEMWZsV1K"
              participations={
                Array [
                  Object {
                    "comment": "Jee",
                    "date": "2018-06-23T09:40:26.992Z",
                    "firstName": "Test",
                    "lastName": "Person",
                    "userId": "mockUserId",
                  },
                ]
              }
            />,
            <EventModal
              closeModal={[Function]}
              eventContent={
                Object {
                  "category": "-LAMd_vpWt-iiSv4f-ID",
                  "createDate": "2018-05-20T16:04:32.601Z",
                  "date": "2018-12-15",
                  "entryFee": "10",
                  "format": "Standard",
                  "link": "https://mtgsuomi.fi/decklist.pdf",
                  "name": "PTPQ Near Future Testing",
                  "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
                  "playerSlots": "65",
                  "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
                  "published": true,
                  "rulesLevel": "Competitive",
                  "time": "10:00",
                }
              }
              eventId="-LCyHtHaY7D13k5FzqNt"
              participations={Array []}
            />,
            <EventModal
              closeModal={[Function]}
              eventContent={
                Object {
                  "category": "-LCmESny8m9JVEFQ_qOt",
                  "createDate": "2018-05-24T10:23:37.507Z",
                  "date": "2018-12-24",
                  "entryFee": "10",
                  "format": "Pokematch",
                  "link": "http://www.pokemon.com",
                  "name": "Pokemon duel",
                  "notes": "Poison pokemon suck",
                  "playerSlots": "10",
                  "prizes": "No poison pokemon",
                  "published": true,
                  "rulesLevel": "Trainer",
                  "time": "10:00",
                }
              }
              eventId="-LDGfDMHuH2Iu1zQkg8I"
              participations={Array []}
            />,
          ],
          <h1
            className="title"
          >
            <Translate
              id="nextevents"
            />
          </h1>,
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-2"
            />
            <div
              className="column is-8"
            >
              <Translate>
                [Function]
              </Translate>
            </div>
            <div
              className="column is-2 is-hidden-mobile"
            />
            <div
              className="column is-2 is-hidden-mobile"
            />
            <div
              className="column is-8 columns is-multiline is-mobile"
            >
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
            </div>
            <div
              className="column is-2"
            />
          </div>,
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-2"
            />
            <div
              className="column is-2 is-12-mobile"
            >
              <button
                className="button is-rounded is-fullwidth  high-button"
                data-tooltip="showpastevents"
                onClick={[Function]}
              >
                <Translate
                  id="showpastevents"
                />
              </button>
            </div>
          </div>,
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LDI56zLiXQtEMWZsV1K"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LCyHtHaY7D13k5FzqNt"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LDGfDMHuH2Iu1zQkg8I"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "modal-LDI56zLiXQtEMWZsV1K",
          "nodeType": "function",
          "props": Object {
            "closeModal": [Function],
            "eventContent": Object {
              "category": "-LAMddmRE2WVqr1U9guz",
              "createDate": "2018-05-24T17:00:46.500Z",
              "date": "2018-09-24",
              "entryFee": "10",
              "format": "Miniatures",
              "link": "http://www.google.fi",
              "name": "Warhammer thing",
              "notes": "Bring your war face!",
              "playerSlots": "10",
              "prizes": "Glory!",
              "published": true,
              "rulesLevel": "Casual",
              "time": "Kill everything",
            },
            "eventId": "-LDI56zLiXQtEMWZsV1K",
            "participations": Array [
              Object {
                "comment": "Jee",
                "date": "2018-06-23T09:40:26.992Z",
                "firstName": "Test",
                "lastName": "Person",
                "userId": "mockUserId",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "modal-LCyHtHaY7D13k5FzqNt",
          "nodeType": "function",
          "props": Object {
            "closeModal": [Function],
            "eventContent": Object {
              "category": "-LAMd_vpWt-iiSv4f-ID",
              "createDate": "2018-05-20T16:04:32.601Z",
              "date": "2018-12-15",
              "entryFee": "10",
              "format": "Standard",
              "link": "https://mtgsuomi.fi/decklist.pdf",
              "name": "PTPQ Near Future Testing",
              "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
              "playerSlots": "65",
              "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
              "published": true,
              "rulesLevel": "Competitive",
              "time": "10:00",
            },
            "eventId": "-LCyHtHaY7D13k5FzqNt",
            "participations": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "modal-LDGfDMHuH2Iu1zQkg8I",
          "nodeType": "function",
          "props": Object {
            "closeModal": [Function],
            "eventContent": Object {
              "category": "-LCmESny8m9JVEFQ_qOt",
              "createDate": "2018-05-24T10:23:37.507Z",
              "date": "2018-12-24",
              "entryFee": "10",
              "format": "Pokematch",
              "link": "http://www.pokemon.com",
              "name": "Pokemon duel",
              "notes": "Poison pokemon suck",
              "playerSlots": "10",
              "prizes": "No poison pokemon",
              "published": true,
              "rulesLevel": "Trainer",
              "time": "10:00",
            },
            "eventId": "-LDGfDMHuH2Iu1zQkg8I",
            "participations": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Translate
              id="nextevents"
            />,
            "className": "title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "nextevents",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="column is-2"
              />,
              <div
                className="column is-8"
              >
                <Translate>
                  [Function]
                </Translate>
              </div>,
              <div
                className="column is-2 is-hidden-mobile"
              />,
              <div
                className="column is-2 is-hidden-mobile"
              />,
              <div
                className="column is-8 columns is-multiline is-mobile"
              >
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
              </div>,
              <div
                className="column is-2"
              />,
            ],
            "className": "columns is-multiline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "column is-2",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Translate>
                  [Function]
                </Translate>,
                "className": "column is-8",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": [Function],
                },
                "ref": null,
                "rendered": [Function],
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "column is-2 is-hidden-mobile",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "column is-2 is-hidden-mobile",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>,
                ],
                "className": "column is-8 columns is-multiline is-mobile",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "categoryfilter--LAMd_vpWt-iiSv4f-ID",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "categoryfilter--LAMddmRE2WVqr1U9guz",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "categoryfilter--LAlvCmIWNzYKpa7-7HI",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "categoryfilter--LCmESny8m9JVEFQ_qOt",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "categoryfilter--LDImTAGxkzrorL0tQdi",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": "categoryfilter--LDIw-1LFgiM0EJZGfus",
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>,
                    "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />,
                      "className": "button is-rounded image-square  ",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "",
                        "className": "image is-48x48",
                        "src": "http://foo.com/image.png",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "img",
                    },
                    "type": "button",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "column is-2",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="column is-2"
              />,
              <div
                className="column is-2 is-12-mobile"
              >
                <button
                  className="button is-rounded is-fullwidth  high-button"
                  data-tooltip="showpastevents"
                  onClick={[Function]}
                >
                  <Translate
                    id="showpastevents"
                  />
                </button>
              </div>,
            ],
            "className": "columns is-multiline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "column is-2",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="button is-rounded is-fullwidth  high-button"
                  data-tooltip="showpastevents"
                  onClick={[Function]}
                >
                  <Translate
                    id="showpastevents"
                  />
                </button>,
                "className": "column is-2 is-12-mobile",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Translate
                    id="showpastevents"
                  />,
                  "className": "button is-rounded is-fullwidth  high-button",
                  "data-tooltip": "showpastevents",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "showpastevents",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LDI56zLiXQtEMWZsV1K"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>,
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LCyHtHaY7D13k5FzqNt"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>,
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LDGfDMHuH2Iu1zQkg8I"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>,
            ],
            "className": "columns is-multiline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "-LDI56zLiXQtEMWZsV1K",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column is-2"
                  />,
                  <Connect(Connect(EventCard))
                    eventId="-LDI56zLiXQtEMWZsV1K"
                    openModal={[Function]}
                  />,
                  <div
                    className="column is-2"
                  />,
                ],
                "className": "column is-12 columns",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "eventId": "-LDI56zLiXQtEMWZsV1K",
                    "openModal": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "-LCyHtHaY7D13k5FzqNt",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column is-2"
                  />,
                  <Connect(Connect(EventCard))
                    eventId="-LCyHtHaY7D13k5FzqNt"
                    openModal={[Function]}
                  />,
                  <div
                    className="column is-2"
                  />,
                ],
                "className": "column is-12 columns",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "eventId": "-LCyHtHaY7D13k5FzqNt",
                    "openModal": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "-LDGfDMHuH2Iu1zQkg8I",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column is-2"
                  />,
                  <Connect(Connect(EventCard))
                    eventId="-LDGfDMHuH2Iu1zQkg8I"
                    openModal={[Function]}
                  />,
                  <div
                    className="column is-2"
                  />,
                ],
                "className": "column is-12 columns",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "eventId": "-LDGfDMHuH2Iu1zQkg8I",
                    "openModal": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "column is-2",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <EventModal
            closeModal={[Function]}
            eventContent={
              Object {
                "category": "-LAMddmRE2WVqr1U9guz",
                "createDate": "2018-05-24T17:00:46.500Z",
                "date": "2018-09-24",
                "entryFee": "10",
                "format": "Miniatures",
                "link": "http://www.google.fi",
                "name": "Warhammer thing",
                "notes": "Bring your war face!",
                "playerSlots": "10",
                "prizes": "Glory!",
                "published": true,
                "rulesLevel": "Casual",
                "time": "Kill everything",
              }
            }
            eventId="-LDI56zLiXQtEMWZsV1K"
            participations={
              Array [
                Object {
                  "comment": "Jee",
                  "date": "2018-06-23T09:40:26.992Z",
                  "firstName": "Test",
                  "lastName": "Person",
                  "userId": "mockUserId",
                },
              ]
            }
          />
          <EventModal
            closeModal={[Function]}
            eventContent={
              Object {
                "category": "-LAMd_vpWt-iiSv4f-ID",
                "createDate": "2018-05-20T16:04:32.601Z",
                "date": "2018-12-15",
                "entryFee": "10",
                "format": "Standard",
                "link": "https://mtgsuomi.fi/decklist.pdf",
                "name": "PTPQ Near Future Testing",
                "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
                "playerSlots": "65",
                "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
                "published": true,
                "rulesLevel": "Competitive",
                "time": "10:00",
              }
            }
            eventId="-LCyHtHaY7D13k5FzqNt"
            participations={Array []}
          />
          <EventModal
            closeModal={[Function]}
            eventContent={
              Object {
                "category": "-LCmESny8m9JVEFQ_qOt",
                "createDate": "2018-05-24T10:23:37.507Z",
                "date": "2018-12-24",
                "entryFee": "10",
                "format": "Pokematch",
                "link": "http://www.pokemon.com",
                "name": "Pokemon duel",
                "notes": "Poison pokemon suck",
                "playerSlots": "10",
                "prizes": "No poison pokemon",
                "published": true,
                "rulesLevel": "Trainer",
                "time": "10:00",
              }
            }
            eventId="-LDGfDMHuH2Iu1zQkg8I"
            participations={Array []}
          />
          <h1
            className="title"
          >
            <Translate
              id="nextevents"
            />
          </h1>
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-2"
            />
            <div
              className="column is-8"
            >
              <Translate>
                [Function]
              </Translate>
            </div>
            <div
              className="column is-2 is-hidden-mobile"
            />
            <div
              className="column is-2 is-hidden-mobile"
            />
            <div
              className="column is-8 columns is-multiline is-mobile"
            >
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
              <div
                className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
              >
                <button
                  className="button is-rounded image-square  "
                  onClick={[Function]}
                >
                  <img
                    alt=""
                    className="image is-48x48"
                    src="http://foo.com/image.png"
                  />
                </button>
              </div>
            </div>
            <div
              className="column is-2"
            />
          </div>
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-2"
            />
            <div
              className="column is-2 is-12-mobile"
            >
              <button
                className="button is-rounded is-fullwidth  high-button"
                data-tooltip="showpastevents"
                onClick={[Function]}
              >
                <Translate
                  id="showpastevents"
                />
              </button>
            </div>
          </div>
          <div
            className="columns is-multiline"
          >
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LDI56zLiXQtEMWZsV1K"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LCyHtHaY7D13k5FzqNt"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
            <div
              className="column is-12 columns"
            >
              <div
                className="column is-2"
              />
              <Connect(Connect(EventCard))
                eventId="-LDGfDMHuH2Iu1zQkg8I"
                openModal={[Function]}
              />
              <div
                className="column is-2"
              />
            </div>
          </div>
        </div>,
        "className": "section",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            Array [
              <EventModal
                closeModal={[Function]}
                eventContent={
                  Object {
                    "category": "-LAMddmRE2WVqr1U9guz",
                    "createDate": "2018-05-24T17:00:46.500Z",
                    "date": "2018-09-24",
                    "entryFee": "10",
                    "format": "Miniatures",
                    "link": "http://www.google.fi",
                    "name": "Warhammer thing",
                    "notes": "Bring your war face!",
                    "playerSlots": "10",
                    "prizes": "Glory!",
                    "published": true,
                    "rulesLevel": "Casual",
                    "time": "Kill everything",
                  }
                }
                eventId="-LDI56zLiXQtEMWZsV1K"
                participations={
                  Array [
                    Object {
                      "comment": "Jee",
                      "date": "2018-06-23T09:40:26.992Z",
                      "firstName": "Test",
                      "lastName": "Person",
                      "userId": "mockUserId",
                    },
                  ]
                }
              />,
              <EventModal
                closeModal={[Function]}
                eventContent={
                  Object {
                    "category": "-LAMd_vpWt-iiSv4f-ID",
                    "createDate": "2018-05-20T16:04:32.601Z",
                    "date": "2018-12-15",
                    "entryFee": "10",
                    "format": "Standard",
                    "link": "https://mtgsuomi.fi/decklist.pdf",
                    "name": "PTPQ Near Future Testing",
                    "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
                    "playerSlots": "65",
                    "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
                    "published": true,
                    "rulesLevel": "Competitive",
                    "time": "10:00",
                  }
                }
                eventId="-LCyHtHaY7D13k5FzqNt"
                participations={Array []}
              />,
              <EventModal
                closeModal={[Function]}
                eventContent={
                  Object {
                    "category": "-LCmESny8m9JVEFQ_qOt",
                    "createDate": "2018-05-24T10:23:37.507Z",
                    "date": "2018-12-24",
                    "entryFee": "10",
                    "format": "Pokematch",
                    "link": "http://www.pokemon.com",
                    "name": "Pokemon duel",
                    "notes": "Poison pokemon suck",
                    "playerSlots": "10",
                    "prizes": "No poison pokemon",
                    "published": true,
                    "rulesLevel": "Trainer",
                    "time": "10:00",
                  }
                }
                eventId="-LDGfDMHuH2Iu1zQkg8I"
                participations={Array []}
              />,
            ],
            <h1
              className="title"
            >
              <Translate
                id="nextevents"
              />
            </h1>,
            <div
              className="columns is-multiline"
            >
              <div
                className="column is-2"
              />
              <div
                className="column is-8"
              >
                <Translate>
                  [Function]
                </Translate>
              </div>
              <div
                className="column is-2 is-hidden-mobile"
              />
              <div
                className="column is-2 is-hidden-mobile"
              />
              <div
                className="column is-8 columns is-multiline is-mobile"
              >
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
                <div
                  className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                >
                  <button
                    className="button is-rounded image-square  "
                    onClick={[Function]}
                  >
                    <img
                      alt=""
                      className="image is-48x48"
                      src="http://foo.com/image.png"
                    />
                  </button>
                </div>
              </div>
              <div
                className="column is-2"
              />
            </div>,
            <div
              className="columns is-multiline"
            >
              <div
                className="column is-2"
              />
              <div
                className="column is-2 is-12-mobile"
              >
                <button
                  className="button is-rounded is-fullwidth  high-button"
                  data-tooltip="showpastevents"
                  onClick={[Function]}
                >
                  <Translate
                    id="showpastevents"
                  />
                </button>
              </div>
            </div>,
            <div
              className="columns is-multiline"
            >
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LDI56zLiXQtEMWZsV1K"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LCyHtHaY7D13k5FzqNt"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>
              <div
                className="column is-12 columns"
              >
                <div
                  className="column is-2"
                />
                <Connect(Connect(EventCard))
                  eventId="-LDGfDMHuH2Iu1zQkg8I"
                  openModal={[Function]}
                />
                <div
                  className="column is-2"
                />
              </div>
            </div>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "modal-LDI56zLiXQtEMWZsV1K",
            "nodeType": "function",
            "props": Object {
              "closeModal": [Function],
              "eventContent": Object {
                "category": "-LAMddmRE2WVqr1U9guz",
                "createDate": "2018-05-24T17:00:46.500Z",
                "date": "2018-09-24",
                "entryFee": "10",
                "format": "Miniatures",
                "link": "http://www.google.fi",
                "name": "Warhammer thing",
                "notes": "Bring your war face!",
                "playerSlots": "10",
                "prizes": "Glory!",
                "published": true,
                "rulesLevel": "Casual",
                "time": "Kill everything",
              },
              "eventId": "-LDI56zLiXQtEMWZsV1K",
              "participations": Array [
                Object {
                  "comment": "Jee",
                  "date": "2018-06-23T09:40:26.992Z",
                  "firstName": "Test",
                  "lastName": "Person",
                  "userId": "mockUserId",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "modal-LCyHtHaY7D13k5FzqNt",
            "nodeType": "function",
            "props": Object {
              "closeModal": [Function],
              "eventContent": Object {
                "category": "-LAMd_vpWt-iiSv4f-ID",
                "createDate": "2018-05-20T16:04:32.601Z",
                "date": "2018-12-15",
                "entryFee": "10",
                "format": "Standard",
                "link": "https://mtgsuomi.fi/decklist.pdf",
                "name": "PTPQ Near Future Testing",
                "notes": "Remember to bring water, a lifepad, paper and most importantly your decklist!",
                "playerSlots": "65",
                "prizes": "7 OMG credits/player will go into the prizepool. 3 OMG credits/player will go to judge fees.",
                "published": true,
                "rulesLevel": "Competitive",
                "time": "10:00",
              },
              "eventId": "-LCyHtHaY7D13k5FzqNt",
              "participations": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "modal-LDGfDMHuH2Iu1zQkg8I",
            "nodeType": "function",
            "props": Object {
              "closeModal": [Function],
              "eventContent": Object {
                "category": "-LCmESny8m9JVEFQ_qOt",
                "createDate": "2018-05-24T10:23:37.507Z",
                "date": "2018-12-24",
                "entryFee": "10",
                "format": "Pokematch",
                "link": "http://www.pokemon.com",
                "name": "Pokemon duel",
                "notes": "Poison pokemon suck",
                "playerSlots": "10",
                "prizes": "No poison pokemon",
                "published": true,
                "rulesLevel": "Trainer",
                "time": "10:00",
              },
              "eventId": "-LDGfDMHuH2Iu1zQkg8I",
              "participations": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Translate
                id="nextevents"
              />,
              "className": "title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "nextevents",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column is-2"
                />,
                <div
                  className="column is-8"
                >
                  <Translate>
                    [Function]
                  </Translate>
                </div>,
                <div
                  className="column is-2 is-hidden-mobile"
                />,
                <div
                  className="column is-2 is-hidden-mobile"
                />,
                <div
                  className="column is-8 columns is-multiline is-mobile"
                >
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                  <div
                    className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                  >
                    <button
                      className="button is-rounded image-square  "
                      onClick={[Function]}
                    >
                      <img
                        alt=""
                        className="image is-48x48"
                        src="http://foo.com/image.png"
                      />
                    </button>
                  </div>
                </div>,
                <div
                  className="column is-2"
                />,
              ],
              "className": "columns is-multiline",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "column is-2",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Translate>
                    [Function]
                  </Translate>,
                  "className": "column is-8",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "rendered": [Function],
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "column is-2 is-hidden-mobile",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "column is-2 is-hidden-mobile",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                    <div
                      className="column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered"
                    >
                      <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>
                    </div>,
                  ],
                  "className": "column is-8 columns is-multiline is-mobile",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LAMd_vpWt-iiSv4f-ID",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LAMddmRE2WVqr1U9guz",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LAlvCmIWNzYKpa7-7HI",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LCmESny8m9JVEFQ_qOt",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LDImTAGxkzrorL0tQdi",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": "categoryfilter--LDIw-1LFgiM0EJZGfus",
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-rounded image-square  "
                        onClick={[Function]}
                      >
                        <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />
                      </button>,
                      "className": "column is-3 is-one-quarter-desktop is-one-quarter-tablet is-one-third-mobile has-text-centered",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <img
                          alt=""
                          className="image is-48x48"
                          src="http://foo.com/image.png"
                        />,
                        "className": "button is-rounded image-square  ",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "alt": "",
                          "className": "image is-48x48",
                          "src": "http://foo.com/image.png",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "img",
                      },
                      "type": "button",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "column is-2",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column is-2"
                />,
                <div
                  className="column is-2 is-12-mobile"
                >
                  <button
                    className="button is-rounded is-fullwidth  high-button"
                    data-tooltip="showpastevents"
                    onClick={[Function]}
                  >
                    <Translate
                      id="showpastevents"
                    />
                  </button>
                </div>,
              ],
              "className": "columns is-multiline",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "column is-2",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="button is-rounded is-fullwidth  high-button"
                    data-tooltip="showpastevents"
                    onClick={[Function]}
                  >
                    <Translate
                      id="showpastevents"
                    />
                  </button>,
                  "className": "column is-2 is-12-mobile",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Translate
                      id="showpastevents"
                    />,
                    "className": "button is-rounded is-fullwidth  high-button",
                    "data-tooltip": "showpastevents",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "showpastevents",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "button",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column is-12 columns"
                >
                  <div
                    className="column is-2"
                  />
                  <Connect(Connect(EventCard))
                    eventId="-LDI56zLiXQtEMWZsV1K"
                    openModal={[Function]}
                  />
                  <div
                    className="column is-2"
                  />
                </div>,
                <div
                  className="column is-12 columns"
                >
                  <div
                    className="column is-2"
                  />
                  <Connect(Connect(EventCard))
                    eventId="-LCyHtHaY7D13k5FzqNt"
                    openModal={[Function]}
                  />
                  <div
                    className="column is-2"
                  />
                </div>,
                <div
                  className="column is-12 columns"
                >
                  <div
                    className="column is-2"
                  />
                  <Connect(Connect(EventCard))
                    eventId="-LDGfDMHuH2Iu1zQkg8I"
                    openModal={[Function]}
                  />
                  <div
                    className="column is-2"
                  />
                </div>,
              ],
              "className": "columns is-multiline",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "-LDI56zLiXQtEMWZsV1K",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="column is-2"
                    />,
                    <Connect(Connect(EventCard))
                      eventId="-LDI56zLiXQtEMWZsV1K"
                      openModal={[Function]}
                    />,
                    <div
                      className="column is-2"
                    />,
                  ],
                  "className": "column is-12 columns",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "eventId": "-LDI56zLiXQtEMWZsV1K",
                      "openModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "-LCyHtHaY7D13k5FzqNt",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="column is-2"
                    />,
                    <Connect(Connect(EventCard))
                      eventId="-LCyHtHaY7D13k5FzqNt"
                      openModal={[Function]}
                    />,
                    <div
                      className="column is-2"
                    />,
                  ],
                  "className": "column is-12 columns",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "eventId": "-LCyHtHaY7D13k5FzqNt",
                      "openModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "-LDGfDMHuH2Iu1zQkg8I",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="column is-2"
                    />,
                    <Connect(Connect(EventCard))
                      eventId="-LDGfDMHuH2Iu1zQkg8I"
                      openModal={[Function]}
                    />,
                    <div
                      className="column is-2"
                    />,
                  ],
                  "className": "column is-12 columns",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "eventId": "-LDGfDMHuH2Iu1zQkg8I",
                      "openModal": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "column is-2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
